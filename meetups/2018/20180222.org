#+TITLE: Our Favorite Modes
#+DATE: 22 February 2018
#+AUTHOR: Jeff Trull

* Tech Check
*** Wifi is "Workshop Cafe", no password
    :PROPERTIES:
    :BEAMER_env: frame
    :END:

* Introduction
*** Call for Co-Organizers
    :PROPERTIES:
    :BEAMER_env: frame
    :END:
- Not sustainable in current state. Sponsor with venue needed for larger groups.
- If you're an "event organizer" you can create any meeting you like
  - Emacs and Clojure?
  - Meetings in South/East/North Bay?
  - More convenient times?
*** Future Topics
    :PROPERTIES:
    :BEAMER_env: frame
    :END:
- Python and Emacs
- Clojure?
- Elisp programming?
- Minor modes?
- Celebrity guests?
- Ideas?
* Presentations
*** Presentations
    :PROPERTIES:
    :BEAMER_env: frame
    :END:
- Jeff Trull, use-package
- Raimon Grau, helm-dash
- Trevor, evil
- Young-Il Choo, ag, ggtags, hydra, more...
- Ag Ibragimov, Magit
- Daniel de Haas, multiple-cursors
- Edward, pynt
- Jeff Trull, Projectile
- Anyone else?
** use-package
*** use-package
#+Beamer: \framesubtitle{Basic Usage}
You can consolidate all your loading and customization for a package into a single spot in your =.emacs=
- create filename/interpreter/magic associations
- bind keys
- execute config code at init or load time
- defer loading until particular commands or bindings are used

*** use-package
#+Beamer: \framesubtitle{Key Binding}

**** Before
#+begin_src emacs-lisp
(require 'magit)
(global-set-key (kbd "C-x g") 'magit-status)
#+end_src

**** After
     :PROPERTIES:
     :BEAMER_act: <2->
     :END:
#+begin_src emacs-lisp
(use-package magit
  :bind ("C-x g" . magit-status))
#+end_src

This sets up the binding *and* defers loading until the key sequence is used.

*** use-package
#+Beamer: \framesubtitle{Configure on Load}

**** Before
#+BEGIN_SRC emacs-lisp
(require 'helm)
(require 'helm-config)
(global-set-key (kbd "C-c h") 'helm-command-prefix)
(global-unset-key (kbd "C-x c"))
(global-set-key (kbd "M-x") 'helm-M-x)
(global-set-key (kbd "C-x b") 'helm-mini)
#+END_SRC

*** use-package
#+Beamer: \framesubtitle{Configure on Load}

**** After
#+BEGIN_SRC emacs-lisp
(use-package helm
  :bind (("M-x" . helm-M-x)
         ("C-x b" . helm-mini))
  :config
  (require 'helm-config)
  (global-unset-key (kbd "C-x c"))
  (global-set-key (kbd "C-c h") 'helm-command-prefix)
)
#+END_SRC

**** Foo :B_ignoreheading:
     :PROPERTIES:
     :BEAMER_env: ignoreheading
     :END:
# that magic property means this "heading" is not part of a block
# this text just sits there in the parent env:
But this only works /if the mode is not already loaded/.

*** use-package
#+Beamer: \framesubtitle{Configure on Init}

**** Before
#+BEGIN_SRC emacs-lisp
(setq c-default-style "ellemtel")
(add-to-list 'auto-mode-alist '("\\.h\\'" . c++-mode))
(defun my-c++-mode-hook ()
  (setq c-basic-offset 4)
  (c-set-offset 'innamespace 0)    ;; no namespace indentation
)
(add-hook 'c++-mode-hook 'my-c++-mode-hook)
#+END_SRC

*** use-package
#+Beamer: \framesubtitle{Configure on Init}

**** After
#+BEGIN_SRC emacs-lisp
(use-package c++-mode
  :mode "\\.h\\'"
  :init
  (setq c-default-style "ellemtel")
  (setq c-basic-offset 4)
  (c-set-offset 'innamespace 0)
)
#+END_SRC

*** use-package
#+Beamer: \framesubtitle{Interaction with Package Manager}

- =use-package= is great but it's not magic.
 -  AFAICT you need to run =(package-initialize)= prior to using =use-package=.

That in turn will load parts of your installed packages, including the "autoload" key bindings. I found that in many cases I could use my installed packages without calling either =require= *or* =use-package=...

- IMO the main advantage of =use-package= is in clarity and centralization, not loading speed.

*** Wrapup
The best reference is the Github repo: https://github.com/jwiegley/use-package

** Raimon Grau: helm-dash
*** Raimon Grau: helm-dash
https://github.com/areina/helm-dash
** Trevor: evil
** Young-Il: many things
** Ag: magit
*** Ag: magit
Notes https://gist.github.com/agzam/9a6534011724ce08bd8dafa45e919f2c
** Daniel: multiple-cursors
*** Daniel: multiple-cursors
https://melpa.org/#/multiple-cursors
** Edward: pynt
*** Edward: pynt
Github repo here: https://github.com/ebanner/pynt
He also talked about the spacemacs hybrid editing mode: http://spacemacs.org/doc/DOCUMENTATION.html#hybrid
** Projectile
*** Projectile
#+Beamer: \framesubtitle{Introduction}

Projectile is an extension that helps you do a lot of common tasks on a software /project/:

- Quickly locating files and file contents
- global query-replace
- switching between related files (header, implementation, test)
- tags
- and more...

It utilizes whatever version control system is in effect.

*** Projectile
#+Beamer: \framesubtitle{My Favorite Commands}

| C-c p f   | find file in project                     |
| C-c p s g | find pattern in project                  |
| C-c p a   | switch between header and implementation |
| C-c p c   | compile (shortcut for M-x compile)       |
| C-c p r   | query-replace on project                 |
* Export Configuration                                     :ARCHIVE:noexport:
#+startup: beamer
#+LATEX_CLASS: beamer
#+LATEX_CLASS_OPTIONS: [aspectratio=169]
#+LATEX_HEADER: \RequirePackage{fancyvrb}
#+LATEX_HEADER: \DefineVerbatimEnvironment{verbatim}{Verbatim}{fontsize=\footnotesize}

#+BEAMER_HEADER: \definecolor{backcolor}{rgb}{0.90,0.90,0.87}
#+BEAMER_HEADER: \definecolor{keywordcolor}{rgb}{0.31,0.53,0.23}
#+OPTIONS: H:3

#+BEAMER_THEME: PaloAlto [width=2cm]

# work around disappearing sidebar subsections
#+BEAMER_HEADER: \usepackage{lmodern}

# my preferred code font
#+BEAMER_HEADER: \usepackage{inconsolata}

#+BEAMER_HEADER: \setbeamerfont{section in sidebar}{size=\scriptsize}
#+BEAMER_HEADER: \setbeamerfont{subsection in sidebar}{size=\tiny}



